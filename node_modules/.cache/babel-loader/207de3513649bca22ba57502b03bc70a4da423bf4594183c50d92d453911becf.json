{"ast":null,"code":"var _jsxFileName = \"/Users/enzolevy/Desktop/Dev/irma.ai/irma2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState({\n    paragraphs: [],\n    listItems: []\n  });\n  const [firstName, setFirstName] = useState(\"\");\n  const [birthDate, setBirthDate] = useState(\"\");\n  const [birthTime, setBirthTime] = useState(\"\");\n  const [birthPlace, setBirthPlace] = useState(\"\");\n  const handleChangeQuestion = e => {\n    setQuestion(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const prompt = `\n    Bonjour chatGPT, tu es astrologue, tu as été engagé par un client pour répondre à ses questions sur son avenir. Voici les informations sur ton client :\n    Prénom: ${firstName}\n    Date de naissance: ${birthDate}\n    Heure de naissance: ${birthTime}\n    Lieu de naissance: ${birthPlace}\n    Pour commencer, peux-tu tirer 13 cartes de tarot de marseilles au hasard et les indiquer dans ta réponse sous forme de liste ? par exemple 'voici 13 cartes de tarot de marseilles tirés au hasard : ...'.\n\n\n    En suite, en t'aidant de l'analyse de son thème astrale, de son horoscope pour l'année 2023, et de l'analyse des cartes de tarot tirées peux-tu répondre à la question suivante : ${question}\n\n\n    J'aimerais que tu réponde précisément et que tu donnes des exemples dans ta réponse. Finis chaque paragraphe par un conseil personnalisés, évite les phrases trop généralistes. Aussi dans l'astrologie les gens sont plus sensibles aux conseils qui portent sur leurs relations et l'humain que sur le matériel.\n    Enlève les formules d'incertitude, nous savons que le tarot est inexacte, pas besoin de le rappeler. Romance un peu ta réponse.\n    `;\n    try {\n      const result = await axios.post(`https://api.openai.com/v1/engines/text-davinci-003/completions`, {\n        prompt,\n        max_tokens: 512,\n        n: 1,\n        stop: null,\n        temperature: 1\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer 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`\n        }\n      });\n      const generatedText = result.data.choices[0].text.trim();\n      const paragraphs = generatedText.split('\\n');\n      const listPattern = /voici 13 cartes de tarot de marseilles tirés au hasard :(.+?)\\./is;\n      const listMatch = completion.match(listPattern);\n      let listItems = [];\n      if (listMatch && listMatch[1]) {\n        listItems = listMatch[1].split(',').map(item => item.trim());\n      }\n      setAnswer({\n        paragraphs,\n        listItems\n      });\n    } catch (error) {\n      console.error('Error fetching data from OpenAI API:', error);\n      setAnswer('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Voiance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Pr\\xE9nom : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: firstName,\n          onChange: e => setFirstName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date de naissance : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: birthDate,\n          onChange: e => setBirthDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Heure de naissance : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: birthTime,\n          onChange: e => setBirthTime(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Lieu de naissance : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: birthPlace,\n          onChange: e => setBirthPlace(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Question : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: question,\n          onChange: handleChangeQuestion,\n          placeholder: \"Posez votre question ici...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 1\n    }, this), answer.paragraphs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"R\\xE9ponse :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }, this), answer.listItems.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: answer.listItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }, this), answer.paragraphs.map((paragraph, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: paragraph\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 1\n  }, this);\n}\n_s(App, \"hgmq3I/KeMtVmOGjfqIP+GZkBvo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","question","setQuestion","answer","setAnswer","paragraphs","listItems","firstName","setFirstName","birthDate","setBirthDate","birthTime","setBirthTime","birthPlace","setBirthPlace","handleChangeQuestion","e","target","value","handleSubmit","preventDefault","prompt","result","post","max_tokens","n","stop","temperature","headers","Authorization","generatedText","data","choices","text","trim","split","listPattern","listMatch","completion","match","map","item","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","placeholder","length","index","paragraph","_c","$RefreshReg$"],"sources":["/Users/enzolevy/Desktop/Dev/irma.ai/irma2/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\n\nfunction App () {\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState({ paragraphs: [], listItems: [] });\n  const [firstName, setFirstName] = useState(\"\");\n  const [birthDate, setBirthDate] = useState(\"\");\n  const [birthTime, setBirthTime] = useState(\"\");\n  const [birthPlace, setBirthPlace] = useState(\"\");\n\n\n  const handleChangeQuestion = (e) => {\n    setQuestion(e.target.value);\n  };\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n\n    const prompt = `\n    Bonjour chatGPT, tu es astrologue, tu as été engagé par un client pour répondre à ses questions sur son avenir. Voici les informations sur ton client :\n    Prénom: ${firstName}\n    Date de naissance: ${birthDate}\n    Heure de naissance: ${birthTime}\n    Lieu de naissance: ${birthPlace}\n    Pour commencer, peux-tu tirer 13 cartes de tarot de marseilles au hasard et les indiquer dans ta réponse sous forme de liste ? par exemple 'voici 13 cartes de tarot de marseilles tirés au hasard : ...'.\n\n\n    En suite, en t'aidant de l'analyse de son thème astrale, de son horoscope pour l'année 2023, et de l'analyse des cartes de tarot tirées peux-tu répondre à la question suivante : ${question}\n\n\n    J'aimerais que tu réponde précisément et que tu donnes des exemples dans ta réponse. Finis chaque paragraphe par un conseil personnalisés, évite les phrases trop généralistes. Aussi dans l'astrologie les gens sont plus sensibles aux conseils qui portent sur leurs relations et l'humain que sur le matériel.\n    Enlève les formules d'incertitude, nous savons que le tarot est inexacte, pas besoin de le rappeler. Romance un peu ta réponse.\n    `;\n\n\n    try {\n      const result = await axios.post(\n        `https://api.openai.com/v1/engines/text-davinci-003/completions`,\n        {\n          prompt,\n          max_tokens: 512,\n          n: 1,\n          stop: null,\n          temperature: 1,\n          },\n        {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer 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`,\n          },\n        }\n      );\n\n      const generatedText = result.data.choices[0].text.trim();\n        const paragraphs = generatedText.split('\\n');\n        const listPattern = /voici 13 cartes de tarot de marseilles tirés au hasard :(.+?)\\./is;\n        const listMatch = completion.match(listPattern);\n        let listItems = [];\n        if (listMatch && listMatch[1]) {\n          listItems = listMatch[1].split(',').map(item => item.trim());\n        }\n        setAnswer({ paragraphs, listItems });\n      } catch (error) {\n        console.error('Error fetching data from OpenAI API:', error);\n        setAnswer('An error occurred. Please try again.');\n      }\n};\n\n\nreturn (\n<div className=\"App\">\n<h1>Voiance</h1>\n<form onSubmit={handleSubmit}>\n<div>\n<label>Prénom : </label>\n<input\ntype=\"text\"\nvalue={firstName}\nonChange={(e) => setFirstName(e.target.value)}\nrequired\n/>\n</div>\n<div>\n<label>Date de naissance : </label>\n<input\ntype=\"date\"\nvalue={birthDate}\nonChange={(e) => setBirthDate(e.target.value)}\nrequired\n/>\n</div>\n<div>\n<label>Heure de naissance : </label>\n<input\ntype=\"time\"\nvalue={birthTime}\nonChange={(e) => setBirthTime(e.target.value)}\nrequired\n/>\n</div>\n<div>\n<label>Lieu de naissance : </label>\n<input\ntype=\"text\"\nvalue={birthPlace}\nonChange={(e) => setBirthPlace(e.target.value)}\nrequired\n/>\n</div>\n<div>\n<label>Question : </label>\n<input\n         type=\"text\"\n         value={question}\n         onChange={handleChangeQuestion}\n         placeholder=\"Posez votre question ici...\"\n         required\n       />\n</div>\n<button type=\"submit\">Envoyer</button>\n</form>\n{answer.paragraphs.length > 0 && (\n  <div>\n    <h2>Réponse :</h2>\n    {answer.listItems.length > 0 && (\n      <ul>\n        {answer.listItems.map((item, index) => (\n          <li key={index}>{item}</li>\n        ))}\n      </ul>\n    )}\n    {answer.paragraphs.map((paragraph, index) => (\n      <p key={index}>{paragraph}</p>\n    ))}\n  </div>\n)}\n\n</div>\n);\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}