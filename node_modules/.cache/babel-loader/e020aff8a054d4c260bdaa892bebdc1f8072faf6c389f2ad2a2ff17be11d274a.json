{"ast":null,"code":"var _jsxFileName = \"/Users/enzolevy/Desktop/Dev/irma.ai/irma2/src/CompatibilityTab.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompatibilityTab = () => {\n  _s();\n  const [person1, setPerson1] = useState({\n    name: '',\n    dob: '',\n    pob: '',\n    tob: ''\n  });\n  const [person2, setPerson2] = useState({\n    name: '',\n    dob: '',\n    pob: '',\n    tob: ''\n  });\n  const [compatibilityType, setCompatibilityType] = useState('amoureuse');\n  const [answer, setAnswer] = useState({\n    paragraphs: [],\n    listItems: []\n  });\n  const handlePersonChange = (e, person) => {\n    const {\n      name,\n      value\n    } = e.target;\n    person === 'person1' ? setPerson1({\n      ...person1,\n      [name]: value\n    }) : setPerson2({\n      ...person2,\n      [name]: value\n    });\n  };\n  const handleCompatibilityTypeChange = e => {\n    setCompatibilityType(e.target.value);\n  };\n  const createPrompt = (person1, person2, compatibilityType) => {\n    return `Bonjour chatGPT, tu es astrologue, tu as été engagé par un client pour calculer sa compatibilité ${compatibilityType} avec une autre personne.\n            Voici les informations sur ton client :\n            Prénom: ${person1.name}\n            Date de naissance: ${person1.dob}\n            Heure de naissance: ${person1.tob}\n            Lieu de naissance: ${person1.pob}\n\n            Voici les informations sur la deuxieme personne :\n            Prénom: ${person2.name}\n            Date de naissance: ${person2.dob}\n            Heure de naissance: ${person2.tob}\n            Lieu de naissance: ${person2.pob}\n\n            Pour commencer, peux-tu tirer 13 cartes de tarot de marseilles au hasard et les indiquer dans ta réponse sous forme de liste ? Tu dois impérativement commencer ta réponse comme suit : 'Voici 13 cartes de tarot de Marseilles tirées au hasard :'.\n\n            En suite, en t'aidant de l'analyse de leur thème astrale, de leur horoscope pour l'année 2023, et de l'analyse des cartes de tarot tirées peux-tu répondre à la question suivante : Est-ce que ${person1.name} et ${person2.name} ont une bonne compatibilité ${compatibilityType} ?\n\n            J'aimerais que tu réponde précisément et que tu donnes des exemples dans ta réponse. Finis chaque paragraphe par un conseil personnalisés, évite les phrases trop généralistes. Aussi dans l'astrologie les gens sont plus sensibles aux conseils qui portent sur leurs relations et l'humain que sur le matériel. Conclu ta réponse avec une réponse par \"oui\" ou par \"non\" pour savoir si ces deux personnes sont compatibles.\n            Enlève les formules d'incertitudes, nous savons que le tarot est inexacte, pas besoin de le rappeler. Romance un peu ta réponse`;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const prompt = createPrompt(person1, person2, compatibilityType);\n    try {\n      const result = await axios.post(`https://api.openai.com/v1/engines/text-davinci-003/completions`, {\n        prompt,\n        max_tokens: 1024,\n        n: 1,\n        stop: null,\n        temperature: 1\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer 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`\n        }\n      });\n      const generatedText = result.data.choices[0].text.trim();\n      const listStart = \"Voici 13 cartes de tarot de Marseilles tirées au hasard :\";\n      const listEnd = \".\";\n      const listStartIndex = generatedText.indexOf(listStart);\n      const listEndIndex = generatedText.indexOf(listEnd, listStartIndex);\n      let listItems = [];\n      if (listStartIndex >= 0 && listEndIndex > listStartIndex) {\n        const listString = generatedText.slice(listStartIndex + listStart.length, listEndIndex);\n        listItems = listString.split(\",\").map(item => item.trim());\n      }\n      const paragraphs = generatedText.split(\"\\n\").filter((paragraph, index) => index !== listStartIndex);\n      setAnswer({\n        paragraphs,\n        listItems\n      });\n    } catch (error) {\n      console.error(\"Error fetching data from OpenAI API:\", error);\n      setAnswer(\"An error occurred. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"compatibility-tab\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Personne 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Pr\\xE9nom :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: person1.name,\n        onChange: e => handlePersonChange(e, 'person1')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Date de naissance :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"dob\",\n        value: person1.dob,\n        onChange: e => handlePersonChange(e, 'person1')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Lieu de naissance :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"pob\",\n        value: person1.pob,\n        onChange: e => handlePersonChange(e, 'person1')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Heure de naissance :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        name: \"tob\",\n        value: person1.tob,\n        onChange: e => handlePersonChange(e, 'person1')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Personne 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Pr\\xE9nom :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: person2.name,\n        onChange: e => handlePersonChange(e, 'person2')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Date de naissance :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"dob\",\n        value: person2.dob,\n        onChange: e => handlePersonChange(e, 'person2')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Lieu de naissance :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"pob\",\n        value: person2.pob,\n        onChange: e => handlePersonChange(e, 'person2')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Heure de naissance :\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        name: \"tob\",\n        value: person2.tob,\n        onChange: e => handlePersonChange(e, 'person2')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        value: \"amoureuse\",\n        checked: compatibilityType === \"amoureuse\",\n        onChange: handleCompatibilityTypeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this), \"Amoureuse\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        value: \"professionnelle\",\n        checked: compatibilityType === \"professionnelle\",\n        onChange: handleCompatibilityTypeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }, this), \"Professionnelle\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        value: \"amicale\",\n        checked: compatibilityType === \"amicale\",\n        onChange: handleCompatibilityTypeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }, this), \"Amicale\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Calculer la compatibilit\\xE9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Reponse-paragraphs\",\n      children: answer.paragraphs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"R\\xE9ponse :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Voici 13 cartes de tarot de Marseilles tir\\xE9s au hasard :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), answer.listItems.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: answer.listItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), answer.paragraphs.map((paragraph, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: paragraph\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(CompatibilityTab, \"GO71jRW2JrmA1ASVxrYYHCp2Sqw=\");\n_c = CompatibilityTab;\nexport default CompatibilityTab;\nvar _c;\n$RefreshReg$(_c, \"CompatibilityTab\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CompatibilityTab","_s","person1","setPerson1","name","dob","pob","tob","person2","setPerson2","compatibilityType","setCompatibilityType","answer","setAnswer","paragraphs","listItems","handlePersonChange","e","person","value","target","handleCompatibilityTypeChange","createPrompt","handleSubmit","preventDefault","prompt","result","post","max_tokens","n","stop","temperature","headers","Authorization","generatedText","data","choices","text","trim","listStart","listEnd","listStartIndex","indexOf","listEndIndex","listString","slice","length","split","map","item","filter","paragraph","index","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","checked","onClick","_c","$RefreshReg$"],"sources":["/Users/enzolevy/Desktop/Dev/irma.ai/irma2/src/CompatibilityTab.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst CompatibilityTab = () => {\n  const [person1, setPerson1] = useState({ name: '', dob: '', pob: '', tob: '' });\n  const [person2, setPerson2] = useState({ name: '', dob: '', pob: '', tob: '' });\n  const [compatibilityType, setCompatibilityType] = useState('amoureuse');\n  const [answer, setAnswer] = useState({ paragraphs: [], listItems: [] });\n\n  const handlePersonChange = (e, person) => {\n    const { name, value } = e.target;\n    person === 'person1' ? setPerson1({ ...person1, [name]: value }) : setPerson2({ ...person2, [name]: value });\n  };\n\n  const handleCompatibilityTypeChange = (e) => {\n    setCompatibilityType(e.target.value);\n  };\n\n  const createPrompt = (person1, person2, compatibilityType) => {\n    return `Bonjour chatGPT, tu es astrologue, tu as été engagé par un client pour calculer sa compatibilité ${compatibilityType} avec une autre personne.\n            Voici les informations sur ton client :\n            Prénom: ${person1.name}\n            Date de naissance: ${person1.dob}\n            Heure de naissance: ${person1.tob}\n            Lieu de naissance: ${person1.pob}\n\n            Voici les informations sur la deuxieme personne :\n            Prénom: ${person2.name}\n            Date de naissance: ${person2.dob}\n            Heure de naissance: ${person2.tob}\n            Lieu de naissance: ${person2.pob}\n\n            Pour commencer, peux-tu tirer 13 cartes de tarot de marseilles au hasard et les indiquer dans ta réponse sous forme de liste ? Tu dois impérativement commencer ta réponse comme suit : 'Voici 13 cartes de tarot de Marseilles tirées au hasard :'.\n\n            En suite, en t'aidant de l'analyse de leur thème astrale, de leur horoscope pour l'année 2023, et de l'analyse des cartes de tarot tirées peux-tu répondre à la question suivante : Est-ce que ${person1.name} et ${person2.name} ont une bonne compatibilité ${compatibilityType} ?\n\n            J'aimerais que tu réponde précisément et que tu donnes des exemples dans ta réponse. Finis chaque paragraphe par un conseil personnalisés, évite les phrases trop généralistes. Aussi dans l'astrologie les gens sont plus sensibles aux conseils qui portent sur leurs relations et l'humain que sur le matériel. Conclu ta réponse avec une réponse par \"oui\" ou par \"non\" pour savoir si ces deux personnes sont compatibles.\n            Enlève les formules d'incertitudes, nous savons que le tarot est inexacte, pas besoin de le rappeler. Romance un peu ta réponse`;\n  };\n\nconst handleSubmit = async (e) => {\n  e.preventDefault();\n\n  const prompt = createPrompt(person1, person2, compatibilityType);\n\n  try {\n    const result = await axios.post(\n      `https://api.openai.com/v1/engines/text-davinci-003/completions`,\n      {\n        prompt,\n        max_tokens: 1024,\n        n: 1,\n        stop: null,\n        temperature: 1,\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer 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`,\n        },\n      }\n    );\n\n    const generatedText = result.data.choices[0].text.trim();\n    const listStart =\n      \"Voici 13 cartes de tarot de Marseilles tirées au hasard :\";\n    const listEnd = \".\";\n    const listStartIndex = generatedText.indexOf(listStart);\n    const listEndIndex = generatedText.indexOf(listEnd, listStartIndex);\n    let listItems = [];\n\n    if (listStartIndex >= 0 && listEndIndex > listStartIndex) {\n      const listString = generatedText.slice(\n        listStartIndex + listStart.length,\n        listEndIndex\n      );\n      listItems = listString.split(\",\").map((item) => item.trim());\n    }\n\n    const paragraphs = generatedText\n      .split(\"\\n\")\n      .filter((paragraph, index) => index !== listStartIndex);\n\n    setAnswer({ paragraphs, listItems });\n  } catch (error) {\n    console.error(\"Error fetching data from OpenAI API:\", error);\n    setAnswer(\"An error occurred. Please try again.\");\n  }\n};\n\n  return (\n    <div className=\"compatibility-tab\">\n      {/* Inputs for Person 1 */}\n      <h3>Personne 1</h3>\n      <label>\n        Prénom :\n        <input type=\"text\" name=\"name\" value={person1.name} onChange={(e) => handlePersonChange(e, 'person1')} />\n      </label>\n      <label>\n        Date de naissance :\n        <input type=\"date\" name=\"dob\" value={person1.dob} onChange={(e) => handlePersonChange(e, 'person1')} />\n      </label>\n      <label>\n        Lieu de naissance :\n        <input type=\"text\" name=\"pob\" value={person1.pob} onChange={(e) => handlePersonChange(e, 'person1')} />\n      </label>\n      <label>\n        Heure de naissance :\n        <input type=\"time\" name=\"tob\" value={person1.tob} onChange={(e) => handlePersonChange(e, 'person1')} />\n      </label>\n\n      {/* Inputs for Person 2 */}\n      <h3>Personne 2</h3>\n      <label>\n        Prénom :\n        <input type=\"text\" name=\"name\" value={person2.name} onChange={(e) => handlePersonChange(e, 'person2')} />\n      </label>\n      <label>\n      Date de naissance :\n      <input type=\"date\" name=\"dob\" value={person2.dob} onChange={(e) => handlePersonChange(e, 'person2')} />\n    </label>\n    <label>\n      Lieu de naissance :\n      <input type=\"text\" name=\"pob\" value={person2.pob} onChange={(e) => handlePersonChange(e, 'person2')} />\n    </label>\n    <label>\n      Heure de naissance :\n      <input type=\"time\" name=\"tob\" value={person2.tob} onChange={(e) => handlePersonChange(e, 'person2')} />\n    </label>\n\n    {/* Radio buttons for compatibility type */}\n    <label>\n      <input\n        type=\"radio\"\n        value=\"amoureuse\"\n        checked={compatibilityType === \"amoureuse\"}\n        onChange={handleCompatibilityTypeChange}\n      />\n      Amoureuse\n    </label>\n    <label>\n      <input\n        type=\"radio\"\n        value=\"professionnelle\"\n        checked={compatibilityType === \"professionnelle\"}\n        onChange={handleCompatibilityTypeChange}\n      />\n      Professionnelle\n    </label>\n    <label>\n      <input\n        type=\"radio\"\n        value=\"amicale\"\n        checked={compatibilityType === \"amicale\"}\n        onChange={handleCompatibilityTypeChange}\n      />\n      Amicale\n    </label>\n\n    {/* Submit button */}\n    <button onClick={handleSubmit}>Calculer la compatibilité</button>\n\n    {/* Display the response */}\n    <div className=\"Reponse-paragraphs\">\n      {answer.paragraphs.length > 0 && (\n        <div>\n          <h2>Réponse :</h2>\n          <p>Voici 13 cartes de tarot de Marseilles tirés au hasard :</p>\n          {answer.listItems.length > 0 && (\n            <ul>\n              {answer.listItems.map((item, index) => (\n                <li key={index}>{item}</li>\n              ))}\n            </ul>\n          )}\n          {answer.paragraphs.map((paragraph, index) => (\n            <p key={index}>{paragraph}</p>\n          ))}\n        </div>\n      )}\n    </div>\n  </div>\n  );\n};\n\nexport default CompatibilityTab;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}