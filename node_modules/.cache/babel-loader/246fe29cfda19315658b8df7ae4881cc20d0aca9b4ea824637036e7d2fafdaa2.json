{"ast":null,"code":"var _jsxFileName = \"/Users/enzolevy/Desktop/Dev/irma.ai/voiance-git/src/SimpleQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { IconContext } from \"react-icons\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SimpleQuestion() {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState({\n    paragraphs: [],\n    listItems: []\n  });\n  const [firstName, setFirstName] = useState(\"\");\n  const [birthDate, setBirthDate] = useState(\"\");\n  const [birthTime, setBirthTime] = useState(\"\");\n  const [birthPlace, setBirthPlace] = useState(\"\");\n  const [tarotCheck, setTarotCheck] = useState(false);\n  const handleChangeQuestion = e => {\n    setQuestion(e.target.value);\n  };\n  const handleTarotCheckChange = e => {\n    setTarotCheck(e.target.checked);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let prompt = '';\n    if (tarotCheck) {\n      prompt = `Bonjour chatGPT, tu es astrologue, tu as été engagé par un client pour répondre à ses questions sur son avenir. Voici les informations sur ton client :\n            Prénom: ${firstName}\n            Date de naissance: ${birthDate}\n            Heure de naissance: ${birthTime}\n            Lieu de naissance: ${birthPlace}\n            Pour commencer, peux-tu tirer 13 cartes de tarot de marseilles au hasard et les indiquer dans ta réponse sous forme de liste ? Tu dois impérativement commencer la réponsee comme suit : 'Voici 13 cartes de tarot de Marseilles tirées au hasard :'.\n\n\n            En suite, en t'aidant de l'analyse de son thème astrale, de son horoscope pour l'année 2023, et de l'analyse des cartes de tarot tirées peux-tu répondre à la question suivante : ${question}\n\n\n            J'aimerais que tu réponde précisément et que tu donnes des exemples dans ta réponse. Finis chaque paragraphe par un conseil personnalisés, évite les phrases trop généralistes. Aussi dans l'astrologie les gens sont plus sensibles aux conseils qui portent sur leurs relations et l'humain que sur le matériel.\n            Enlève les formules d'incertitude, nous savons que le tarot est inexacte, pas besoin de le rappeler. Romance un peu ta réponse. Réponds en moins de 512 caractères et fait des paragraphes courts.\n            `;\n    } else {\n      prompt = `\n            Bonjour chatGPT, tu es astrologue, tu as été engagé par un client pour répondre à ses questions sur son avenir. Voici les informations sur ton client :\n            Prénom: ${firstName}\n            Date de naissance: ${birthDate}\n            Heure de naissance: ${birthTime}\n            Lieu de naissance: ${birthPlace}\n\n\n            En suite, en t'aidant de l'analyse de son thème astrale, de son horoscope pour l'année 2023, peux-tu répondre à la question suivante : ${question}\n\n\n            J'aimerais que tu réponde précisément et que tu donnes des exemples dans ta réponse. Finis chaque paragraphe par un conseil personnalisés, évite les phrases trop généralistes. Aussi dans l'astrologie les gens sont plus sensibles aux conseils qui portent sur leurs relations et l'humain que sur le matériel.\n            Enlève les formules d'incertitude, nous savons que l'astrologie est inexacte, pas besoin de le rappeler. Romance un peu ta réponse. Réponds en moins de 512 caractères et fait des paragraphes courts.\n            `;\n    }\n    try {\n      const result = await axios.post(`https://api.openai.com/v1/engines/text-davinci-003/completions`, {\n        prompt,\n        max_tokens: 512,\n        n: 1,\n        stop: null,\n        temperature: 1\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer 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`\n        }\n      });\n      const generatedText = result.data.choices[0].text.trim();\n      const listStart = \"Voici 13 cartes de tarot de Marseilles tirées au hasard :\";\n      const listEnd = \".\";\n      const listStartIndex = generatedText.indexOf(listStart);\n      const listEndIndex = generatedText.indexOf(listEnd, listStartIndex);\n      let listItems = [];\n      if (listStartIndex >= 0 && listEndIndex > listStartIndex) {\n        const listString = generatedText.slice(listStartIndex + listStart.length, listEndIndex);\n        listItems = listString.split(\",\").map(item => item.trim());\n      }\n      const paragraphs = generatedText.split(\"\\n\").filter((paragraph, index) => index !== listStartIndex);\n      setAnswer({\n        paragraphs,\n        listItems\n      });\n    } catch (error) {\n      console.error(\"Error fetching data from OpenAI API:\", error);\n      setAnswer(\"An error occurred. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Form-astral\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"Form-label-astral\",\n              children: \"Pr\\xE9nom : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"Form-input-astral\",\n              type: \"text\",\n              value: firstName,\n              onChange: e => setFirstName(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"Form-label-astral\",\n              children: \"Date de naissance : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"Form-input-astral\",\n              type: \"date\",\n              value: birthDate,\n              onChange: e => setBirthDate(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"Form-label-astral\",\n              children: \"Heure de naissance : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"Form-input-astral\",\n              type: \"time\",\n              value: birthTime,\n              onChange: e => setBirthTime(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"Form-label-astral\",\n              children: \"Lieu de naissance : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"Form-input-astral\",\n              type: \"text\",\n              value: birthPlace,\n              onChange: e => setBirthPlace(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"Form-label-astral\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"Form-checkbox-astral\",\n            type: \"checkbox\",\n            checked: tarotCheck,\n            onChange: handleTarotCheckChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 11\n          }, this), \"Cartes de tarot\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Form-Question\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"Form-label-question\",\n          children: \"Question : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"Form-input-question\",\n          type: \"text\",\n          value: question,\n          onChange: handleChangeQuestion,\n          placeholder: \"Posez votre question ici...\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n          value: {\n            className: \"iconSearch\"\n          },\n          children: /*#__PURE__*/_jsxDEV(FaSearch, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Button-submit-div\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Button\",\n          type: \"submit\",\n          children: \"Demander au voyant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Reponse-paragraphs\",\n      children: answer.paragraphs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"R\\xE9ponse :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Voici 13 cartes de tarot de Marseilles tir\\xE9s au hasard :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), answer.listItems.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: answer.listItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this), answer.paragraphs.map((paragraph, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: paragraph\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(SimpleQuestion, \"G7fRAAEsmFugQkih023fyZhch10=\");\n_c = SimpleQuestion;\nexport default SimpleQuestion;\nvar _c;\n$RefreshReg$(_c, \"SimpleQuestion\");","map":{"version":3,"names":["React","useState","axios","IconContext","FaSearch","jsxDEV","_jsxDEV","SimpleQuestion","_s","question","setQuestion","answer","setAnswer","paragraphs","listItems","firstName","setFirstName","birthDate","setBirthDate","birthTime","setBirthTime","birthPlace","setBirthPlace","tarotCheck","setTarotCheck","handleChangeQuestion","e","target","value","handleTarotCheckChange","checked","handleSubmit","preventDefault","prompt","result","post","max_tokens","n","stop","temperature","headers","Authorization","generatedText","data","choices","text","trim","listStart","listEnd","listStartIndex","indexOf","listEndIndex","listString","slice","length","split","map","item","filter","paragraph","index","error","console","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","placeholder","Provider","_c","$RefreshReg$"],"sources":["/Users/enzolevy/Desktop/Dev/irma.ai/voiance-git/src/SimpleQuestion.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { IconContext } from \"react-icons\";\nimport { FaSearch } from \"react-icons/fa\";\n\nfunction SimpleQuestion() {\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState({ paragraphs: [], listItems: [] });\n  const [firstName, setFirstName] = useState(\"\");\n  const [birthDate, setBirthDate] = useState(\"\");\n  const [birthTime, setBirthTime] = useState(\"\");\n  const [birthPlace, setBirthPlace] = useState(\"\");\n  const [tarotCheck, setTarotCheck] = useState(false);\n\n  const handleChangeQuestion = (e) => {\n    setQuestion(e.target.value);\n  };\n\n  const handleTarotCheckChange = (e) => {\n    setTarotCheck(e.target.checked);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    let prompt='';\n\n    if (tarotCheck) {\n            prompt = `Bonjour chatGPT, tu es astrologue, tu as été engagé par un client pour répondre à ses questions sur son avenir. Voici les informations sur ton client :\n            Prénom: ${firstName}\n            Date de naissance: ${birthDate}\n            Heure de naissance: ${birthTime}\n            Lieu de naissance: ${birthPlace}\n            Pour commencer, peux-tu tirer 13 cartes de tarot de marseilles au hasard et les indiquer dans ta réponse sous forme de liste ? Tu dois impérativement commencer la réponsee comme suit : 'Voici 13 cartes de tarot de Marseilles tirées au hasard :'.\n\n\n            En suite, en t'aidant de l'analyse de son thème astrale, de son horoscope pour l'année 2023, et de l'analyse des cartes de tarot tirées peux-tu répondre à la question suivante : ${question}\n\n\n            J'aimerais que tu réponde précisément et que tu donnes des exemples dans ta réponse. Finis chaque paragraphe par un conseil personnalisés, évite les phrases trop généralistes. Aussi dans l'astrologie les gens sont plus sensibles aux conseils qui portent sur leurs relations et l'humain que sur le matériel.\n            Enlève les formules d'incertitude, nous savons que le tarot est inexacte, pas besoin de le rappeler. Romance un peu ta réponse. Réponds en moins de 512 caractères et fait des paragraphes courts.\n            `;\n    } else {\n            prompt = `\n            Bonjour chatGPT, tu es astrologue, tu as été engagé par un client pour répondre à ses questions sur son avenir. Voici les informations sur ton client :\n            Prénom: ${firstName}\n            Date de naissance: ${birthDate}\n            Heure de naissance: ${birthTime}\n            Lieu de naissance: ${birthPlace}\n\n\n            En suite, en t'aidant de l'analyse de son thème astrale, de son horoscope pour l'année 2023, peux-tu répondre à la question suivante : ${question}\n\n\n            J'aimerais que tu réponde précisément et que tu donnes des exemples dans ta réponse. Finis chaque paragraphe par un conseil personnalisés, évite les phrases trop généralistes. Aussi dans l'astrologie les gens sont plus sensibles aux conseils qui portent sur leurs relations et l'humain que sur le matériel.\n            Enlève les formules d'incertitude, nous savons que l'astrologie est inexacte, pas besoin de le rappeler. Romance un peu ta réponse. Réponds en moins de 512 caractères et fait des paragraphes courts.\n            `;\n          }\n\n    try {\n      const result = await axios.post(\n        `https://api.openai.com/v1/engines/text-davinci-003/completions`,\n        {\n          prompt,\n          max_tokens: 512,\n          n: 1,\n          stop: null,\n          temperature: 1,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer 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`,\n          },\n        }\n      );\n\n      const generatedText = result.data.choices[0].text.trim();\n      const listStart =\n        \"Voici 13 cartes de tarot de Marseilles tirées au hasard :\";\n      const listEnd = \".\";\n      const listStartIndex = generatedText.indexOf(listStart);\n      const listEndIndex = generatedText.indexOf(listEnd, listStartIndex);\n      let listItems = [];\n\n      if (listStartIndex >= 0 && listEndIndex > listStartIndex) {\n        const listString = generatedText.slice(\n          listStartIndex + listStart.length,\n          listEndIndex\n        );\n        listItems = listString.split(\",\").map((item) => item.trim());\n      }\n\n      const paragraphs = generatedText\n        .split(\"\\n\")\n        .filter((paragraph, index) => index !== listStartIndex);\n\n      setAnswer({ paragraphs, listItems });\n    } catch (error) {\n      console.error(\"Error fetching data from OpenAI API:\", error);\n      setAnswer(\"An error occurred. Please try again.\");\n    }\n  };\n\n  return (\n    <div className=\"Container\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"Form\">\n          <div className=\"Form-astral\">\n            <div>\n              <label className=\"Form-label-astral\">Prénom : </label>\n              <input\n                className=\"Form-input-astral\"\n                type=\"text\"\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n                required\n              />\n            </div>\n            <div>\n              <label className=\"Form-label-astral\">Date de naissance : </label>\n              <input\n                className=\"Form-input-astral\"\n                type=\"date\"\n                value={birthDate}\n                onChange={(e) => setBirthDate(e.target.value)}\n                required\n              />\n            </div>\n            <div>\n              <label className=\"Form-label-astral\">Heure de naissance : </label>\n              <input\n                className=\"Form-input-astral\"\n                type=\"time\"\n                value={birthTime}\n                onChange={(e) => setBirthTime(e.target.value)}\n                required\n              />\n            </div>\n            <div>\n              <label className=\"Form-label-astral\">Lieu de naissance : </label>\n              <input\n                className=\"Form-input-astral\"\n                type=\"text\"\n                value={birthPlace}\n                onChange={(e) => setBirthPlace(e.target.value)}\n                required\n              />\n            </div>\n\n          </div>\n        </div>\n\n        <div>\n          <label className=\"Form-label-astral\">\n          <input\n            className=\"Form-checkbox-astral\"\n            type=\"checkbox\"\n            checked={tarotCheck}\n            onChange={handleTarotCheckChange}\n          />\n          Cartes de tarot\n          </label>\n        </div>\n\n        <div className=\"Form-Question\">\n          <label className=\"Form-label-question\">Question : </label>\n          <input\n            className=\"Form-input-question\"\n            type=\"text\"\n            value={question}\n            onChange={handleChangeQuestion}\n            placeholder=\"Posez votre question ici...\"\n            required\n          />\n          <IconContext.Provider value={{ className: \"iconSearch\" }}>\n              <FaSearch />\n          </IconContext.Provider>\n        </div>\n        <div className=\"Button-submit-div\">\n          <button className=\"Button\" type=\"submit\">\n            Demander au voyant\n          </button>\n        </div>\n      </form>\n      <div className=\"Reponse-paragraphs\">\n        {answer.paragraphs.length > 0 && (\n          <div>\n            <h2>Réponse :</h2>\n            <p>Voici 13 cartes de tarot de Marseilles tirés au hasard :</p>\n            {answer.listItems.length > 0 && (\n              <ul>\n                {answer.listItems.map((item, index) => (\n                  <li key={index}>{item}</li>\n                ))}\n              </ul>\n            )}\n            {answer.paragraphs.map((paragraph, index) => (\n              <p key={index}>{paragraph}</p>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SimpleQuestion;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}